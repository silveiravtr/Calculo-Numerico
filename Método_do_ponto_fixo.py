# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cH9mvcW09ctimCqnu8me35QWwYLk9tKf
"""

'''
Aluno: João Vítor Brito Silveira

Método: Ponto Fixo

Resumo:  Na iteração do Ponto Fixo a fórmula para prever a raiz
pode ser deduzida reescrevendo a equação f(x)=0 de modo que "x"
esteja isolado do lado esquerdo da equação.

'''

#importando funções matemáticas
import numpy as np
import math

#Valores iniciais e dados do enunciado
chute_inicial=0 #chute inicial que deve iniciar na função
tol=5 #tolerância desejada (5%)
max_iter=100 #nº máximo de iterações

#definindo a função original do problema
def f(x):
    return math.exp(-x)-x

#definindo a função derivada (função de iteração)
def g(x):
    return math.exp(-x)

#definindo um critério de parada
def parada(x1, x0, tol):
    return abs((x1-x0)/x1)*100<tol

#definindo a função a ser usada
def ponto_fixo(chute_inicial, tol, max_iter):
    x0=chute_inicial
    iter=0

    while iter<max_iter:
        x1 = g(x0)
        if parada(x1, x0, tol):
            return x1
        x0=x1  #atualiza a aproximação anterior para a nova encontrada
        iter+=1 #incrementando o contador de iterações


    #em caso de não convergir dentro do limite de iterações
    print("O método não convergiu dentro de um limite de 100 iterações.")
    return None

#raiz da função
raiz_aprox=ponto_fixo(chute_inicial, tol, max_iter)

#exibindo os resultados
if raiz_aprox is not None:
    print("A raiz da função é de aproximadamente: ", raiz_aprox)
    valor_verdadeiro = 0.56714329
    erro_rel = abs((raiz_aprox-valor_verdadeiro)/valor_verdadeiro)*100
    print("O erro relativo percentual verdadeiro é de: ", erro_rel)
else:
    print("Não foiencontrada uma raiz dentro dos critérios definidos.")