# -*- coding: utf-8 -*-
"""Untitled22.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qm8VZmjm9t8lvRfK0WQCfgUpdc4cGYj8
"""

'''
Nome: João Vítor Brito da Silveira

Método: Runge-Kutta de 4°Ordem

Resumo:O método de runge-kutta de 4°ordem é uma técnica para encontrar uma
aproximação da solução de uma equação diferencial, que descreve como uma
quantidade muda ao longo do tempo. Em resumo, o método RK4 calcula a solução de
uma equação diferencial de forma precisa ao usar várias estimativas
intermediárias e combiná-las para obter uma solução mais exata em
cada passo de tempo.
'''
#Importando funções matemáticas
import numpy as np

#Função f(x,y)
def f(x,y):
    return -2*x**3+12*x**2-20*x+8.5

#Função para implementar o método de Runge-Kutta de quarta ordem
def runge_kutta_4_ordem(f,x0,y0,h,n):
    #Inicialização dos arrays que vão armazenar os valores de x e y
    valores_x=np.zeros(n+1) #Armazena os valores de x
    valores_y=np.zeros(n+1) #Armazena os valores de y

    #Condições iniciais
    valores_x[0],valores_y[0] = x0,y0 #Armazenar os valores iniciais de x e y

    #Loop para calcular os valores de x e y em cada passo
    for i in range(n):
        #Valores atuais de x e y
        x_i,y_i=valores_x[i],valores_y[i]

        #Calcular k1,k2,k3 e k4 com base nas fórmulas do método
        k1=f(x_i,y_i)
        k2=f(x_i+0.5*h,y_i+0.5*k1*h)
        k3=f(x_i+0.5*h,y_i+0.5*k2*h)
        k4=f(x_i+h,y_i+k3*h)

        #Atualizar o próximo valor de y usando a fórmula do método
        valores_y[i+1]=y_i+(h/6)*(k1+2*k2+2*k3+k4)

        #Atualizar o próximo valor de x (incremento de h)
        valores_x[i+1]=x_i+h

    #Retornar os arrays contendo os valores de x e y
    return valores_x,valores_y

#Condições iniciais
x0=0 #Valor inicial de x
y0=1 #Condição inicial y(0)=1
h=0.5 #Tamanho do passo (h)
x_final=4 #Valor final de x
n=int((x_final-x0)/h) #Número de passos

#Resolver o problema usando o método de Runge-Kutta de quarta ordem
valores_x,valores_y=runge_kutta_4_ordem(f,x0,y0,h,n)

#Exibir os resultados
for i in range(len(valores_x)):
    print(f"x={valores_x[i]:.2f},y={valores_y[i]:.6f}")