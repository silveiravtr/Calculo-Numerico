# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n0pPsKAMgOooEBwZQa52gepzCS2ovN9q
"""

'''
Nome: João Vítor Brito da Silveira

Método: Quadratura de Gauss

Resumo: O método da quadratura de Gauss é uma técnica de integração numérica que
permite calcular aproximações precisas para integrais definidas. Ao contrário de
métodos como a Regra dos Trapézios ou a Regra de Simpson, que utilizam pontos
igualmente espaçados no intervalo de integração, a quadratura de Gauss seleciona
cuidadosamente os pontos de amostragem (chamados de pontos de Gauss) e seus
respectivos pesos para maximizar a precisão da aproximação.
'''

#Importando funções matemáticas
import numpy as np

#Definir a função a ser integrada
def f(x):
    return 0.2+25*x-200*x**2+675*x**3-900*x**4+400*x**5

#Implementação da quadratura de Gauss de dois pontos
def quadratura_gauss(a, b):
    #Pontos e pesos de Gauss-Legendre para dois pontos
    pontos=[-1/np.sqrt(3),1/np.sqrt(3)]
    pesos=[1,1]

    #Inicializar a soma
    soma=0

    #Calcular a integral
    for i in range(2):
        #Transformação dos pontos
        x_i=(b+a)/2+(b-a)/2*pontos[i]
        #Somar o peso multiplicado pelo valor da função no ponto transformado
        soma+=pesos[i]*f(x_i)

    #Multiplicar pela metade da largura do intervalo
    integral_aproximada=(b-a)/2*soma

    return integral_aproximada

#Parâmetros do problema
a=0
b=0.8

#Valor verdadeiro da integral fornecido
valor_verdadeiro=1.640533

#Calcular a integral usando a quadratura de Gauss
resultado=quadratura_gauss(a, b)

#Calcular o erro relativo percentual verdadeiro
erro_relativo=abs((valor_verdadeiro-resultado)/valor_verdadeiro)*100

#Imprimir os resultados
print(f"Resultado da integração: {resultado}")
print(f"Erro relativo percentual verdadeiro: {erro_relativo:.6f}%")