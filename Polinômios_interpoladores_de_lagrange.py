# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HVVnGmepjU5dKUrbjPi2LuxWJpZcwzS7
"""

'''
Nome: João Vítor Brito da Silveira

Método: Polinômios Interpoladores de Lagrange

Resumo:
Os polinômios interpoladores de Lagrange são uma ferramenta fundamental na
interpolação numérica, usada para estimar valores de uma função com base em
um conjunto discreto de dados.

Os polinômios interpoladores de Lagrange são usados para encontrar um polinômio
que passa exatamente por um conjunto dado de pontos (xi, yi), onde xi são os
pontos no eixo x e yi são os valores correspondentes no eixo y. O polinômio
interpolador de Lagrange é uma forma específica de polinômio que garante que
o polinômio passe por todos esses pontos.
'''



#Importando funções matemáticas
import numpy as np

#Definindo os pontos dados para a interpolação
pontos_x=np.array([1,4,6])  #Pontos x onde a função é conhecida
valores_y=np.array([0,1.386294,1.791759])  #Valores da função para os pontos x

def interpolacao_lagrange(x,y,z):

    '''
    Calcula a interpolação de Lagrange para o valor z usando os pontos (x, y).

    Parâmetros:
    x : array-like
        Pontos x conhecidos para a interpolação.
    y : array-like
        Valores da função correspondentes aos pontos x.
    z : float
        O ponto onde queremos calcular o valor interpolado.

    Retorna:
    float
        O valor interpolado no ponto z.
    '''

    n=len(x)  #Número de pontos de dados
    soma=0.0  #Inicializa a variável soma para acumular o resultado

    #Itera sobre cada ponto para calcular o valor da interpolação
    for i in range(n):
        L=y[i]  #Inicializa L com o valor y[i]

        #Calcula o valor do polinômio L de Lagrange para o ponto z
        for j in range(n):
            if i!=j:
                L*=(z-x[j])/(x[i]-x[j])

        #Adiciona o valor de L ao total da soma
        soma+=L

    return soma  #Retorna o valor interpolado

#Interpolação de primeiro grau
#Usamos apenas os dois primeiros pontos (x0 e x1) para interpolar
pontos_x_1_grau=np.array([pontos_x[0],pontos_x[1]])  #Pontos x para a interpolação de primeiro grau
valores_y_1_grau=np.array([valores_y[0],valores_y[1]])  #Valores y correspondentes
ln2_primeiro_grau=interpolacao_lagrange(pontos_x_1_grau,valores_y_1_grau,2)  #Calcula a interpolação para z = 2

#Interpolação de segundo grau
#Usamos todos os três pontos (x0, x1 e x2) para interpolar
ln2_segundo_grau=interpolacao_lagrange(pontos_x,valores_y,2)  #Calcula a interpolação para z = 2

#Exibe os resultados das interpolações
print(f"Interpolação de Lagrange de primeiro grau para ln(2): {ln2_primeiro_grau}")
print(f"Interpolação de Lagrange de segundo grau para ln(2): {ln2_segundo_grau}")