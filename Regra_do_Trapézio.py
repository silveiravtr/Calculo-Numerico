# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e9zz6JV_3Zwi19D3J2uEPN3kngMhi2Ss
"""

'''
Nome: João Vítor Brito da Silveira

Método: Regra do Trapézio

Reumo: A regra do trapézio é um método numérico utilizado para aproximar o
valor de uma integral definida. A ideia é dividir a área sob a curva da função
em pequenos trapézios e calcular a soma das áreas desses trapézios.
'''

#Importando funções matemáticas
import numpy as np

#Função que implementa a Regra do Trapézio
def regra_trapezio(f,a,b,n):
    #Calcula o tamanho de cada subintervalo (h)
    h=(b-a)/n

    #Inicializa a soma com os valores das funções nos pontos extremos (a e b)
    soma=f(a)+f(b)

    #Loop para calcular a soma dos valores da função nos pontos intermediários
    for i in range(1,n):
        xi=a+i*h  #Calcula a posição do ponto intermediário xi
        soma+=2*f(xi)  #Adiciona duas vezes o valor da função em xi à soma

    #Calcula a integral aproximada multiplicando a soma por h/2
    I=(h/2)*soma

    return I  #Retorna o valor aproximado da integral

#Definição da função f(x) do exemplo na página 45
def f(x):
    #Retorna o valor da função para um dado x
    return 0.2+25*x-200*x**2+675*x**3-900*x**4+400*x**5

#Parâmetros do problema: limites de integração e número de subintervalos
a=0  #Limite inferior
b=0.8  #Limite superior
n=2  #Número de subintervalos (segmentos)

#Chama a função para calcular a integral usando a Regra do Trapézio
resultado=regra_trapezio(f,a,b,n)

#Exibe o resultado com 6 casas decimais
print(f'O valor aproximado da integral é: {resultado:.6f}')